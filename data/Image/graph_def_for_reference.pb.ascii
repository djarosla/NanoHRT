node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 37
        }
        dim {
          size: 37
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 14
        }
      }
    }
  }
}
node {
  name: "Conv1/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0529009215534
      }
    }
  }
}
node {
  name: "Conv1/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0529009215534
      }
    }
  }
}
node {
  name: "Conv1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv1/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 252528
    }
  }
}
node {
  name: "Conv1/random_uniform/sub"
  op: "Sub"
  input: "Conv1/random_uniform/max"
  input: "Conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/random_uniform/mul"
  op: "Mul"
  input: "Conv1/random_uniform/RandomUniform"
  input: "Conv1/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/random_uniform"
  op: "Add"
  input: "Conv1/random_uniform/mul"
  input: "Conv1/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv1/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/kernel/Assign"
  op: "Assign"
  input: "Conv1/kernel"
  input: "Conv1/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/kernel/read"
  op: "Identity"
  input: "Conv1/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
}
node {
  name: "Conv1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv1/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv1/bias/Assign"
  op: "Assign"
  input: "Conv1/bias"
  input: "Conv1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/bias/read"
  op: "Identity"
  input: "Conv1/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bias"
      }
    }
  }
}
node {
  name: "Conv1/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv1/convolution"
  op: "Conv2D"
  input: "input_1"
  input: "Conv1/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv1/BiasAdd"
  op: "BiasAdd"
  input: "Conv1/convolution"
  input: "Conv1/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Conv1/Relu"
  op: "Relu"
  input: "Conv1/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_1/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_1/Pad"
  op: "Pad"
  input: "Conv1/Relu"
  input: "zero_padding2d_1/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv2/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Conv2/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0441941730678
      }
    }
  }
}
node {
  name: "Conv2/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0441941730678
      }
    }
  }
}
node {
  name: "Conv2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv2/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 4158656
    }
  }
}
node {
  name: "Conv2/random_uniform/sub"
  op: "Sub"
  input: "Conv2/random_uniform/max"
  input: "Conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2/random_uniform/mul"
  op: "Mul"
  input: "Conv2/random_uniform/RandomUniform"
  input: "Conv2/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2/random_uniform"
  op: "Add"
  input: "Conv2/random_uniform/mul"
  input: "Conv2/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv2/kernel/Assign"
  op: "Assign"
  input: "Conv2/kernel"
  input: "Conv2/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv2/kernel/read"
  op: "Identity"
  input: "Conv2/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/kernel"
      }
    }
  }
}
node {
  name: "Conv2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv2/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv2/bias/Assign"
  op: "Assign"
  input: "Conv2/bias"
  input: "Conv2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv2/bias/read"
  op: "Identity"
  input: "Conv2/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/bias"
      }
    }
  }
}
node {
  name: "Conv2/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv2/convolution"
  op: "Conv2D"
  input: "zero_padding2d_1/Pad"
  input: "Conv2/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv2/BiasAdd"
  op: "BiasAdd"
  input: "Conv2/convolution"
  input: "Conv2/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Conv2/Relu"
  op: "Relu"
  input: "Conv2/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "Conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "zero_padding2d_2/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_2/Pad"
  op: "Pad"
  input: "max_pooling2d_1/MaxPool"
  input: "zero_padding2d_2/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv3/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0541265867651
      }
    }
  }
}
node {
  name: "Conv3/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0541265867651
      }
    }
  }
}
node {
  name: "Conv3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv3/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2178029
    }
  }
}
node {
  name: "Conv3/random_uniform/sub"
  op: "Sub"
  input: "Conv3/random_uniform/max"
  input: "Conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3/random_uniform/mul"
  op: "Mul"
  input: "Conv3/random_uniform/RandomUniform"
  input: "Conv3/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3/random_uniform"
  op: "Add"
  input: "Conv3/random_uniform/mul"
  input: "Conv3/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv3/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3/kernel/Assign"
  op: "Assign"
  input: "Conv3/kernel"
  input: "Conv3/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3/kernel/read"
  op: "Identity"
  input: "Conv3/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/kernel"
      }
    }
  }
}
node {
  name: "Conv3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv3/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv3/bias/Assign"
  op: "Assign"
  input: "Conv3/bias"
  input: "Conv3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3/bias/read"
  op: "Identity"
  input: "Conv3/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/bias"
      }
    }
  }
}
node {
  name: "Conv3/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv3/convolution"
  op: "Conv2D"
  input: "zero_padding2d_2/Pad"
  input: "Conv3/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv3/BiasAdd"
  op: "BiasAdd"
  input: "Conv3/convolution"
  input: "Conv3/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Conv3/Relu"
  op: "Relu"
  input: "Conv3/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "zero_padding2d_3/Pad/paddings"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "zero_padding2d_3/Pad"
  op: "Pad"
  input: "Conv3/Relu"
  input: "zero_padding2d_3/Pad/paddings"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tpaddings"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv4/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Conv4/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0541265867651
      }
    }
  }
}
node {
  name: "Conv4/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0541265867651
      }
    }
  }
}
node {
  name: "Conv4/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Conv4/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 7836359
    }
  }
}
node {
  name: "Conv4/random_uniform/sub"
  op: "Sub"
  input: "Conv4/random_uniform/max"
  input: "Conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv4/random_uniform/mul"
  op: "Mul"
  input: "Conv4/random_uniform/RandomUniform"
  input: "Conv4/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv4/random_uniform"
  op: "Add"
  input: "Conv4/random_uniform/mul"
  input: "Conv4/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv4/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv4/kernel/Assign"
  op: "Assign"
  input: "Conv4/kernel"
  input: "Conv4/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv4/kernel/read"
  op: "Identity"
  input: "Conv4/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/kernel"
      }
    }
  }
}
node {
  name: "Conv4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Conv4/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Conv4/bias/Assign"
  op: "Assign"
  input: "Conv4/bias"
  input: "Conv4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Conv4/bias/read"
  op: "Identity"
  input: "Conv4/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/bias"
      }
    }
  }
}
node {
  name: "Conv4/convolution/dilation_rate"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Conv4/convolution"
  op: "Conv2D"
  input: "zero_padding2d_3/Pad"
  input: "Conv4/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "Conv4/BiasAdd"
  op: "BiasAdd"
  input: "Conv4/convolution"
  input: "Conv4/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Conv4/Relu"
  op: "Relu"
  input: "Conv4/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "Conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "flatten_1/Shape"
  op: "Shape"
  input: "max_pooling2d_2/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "flatten_1/strided_slice"
  op: "StridedSlice"
  input: "flatten_1/Shape"
  input: "flatten_1/strided_slice/stack"
  input: "flatten_1/strided_slice/stack_1"
  input: "flatten_1/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "flatten_1/Prod"
  op: "Prod"
  input: "flatten_1/strided_slice"
  input: "flatten_1/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "flatten_1/stack/0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "flatten_1/stack"
  op: "Pack"
  input: "flatten_1/stack/0"
  input: "flatten_1/Prod"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "flatten_1/Reshape"
  op: "Reshape"
  input: "max_pooling2d_2/MaxPool"
  input: "flatten_1/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Dense00/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Dense00/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0379777252674
      }
    }
  }
}
node {
  name: "Dense00/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0379777252674
      }
    }
  }
}
node {
  name: "Dense00/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense00/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6276471
    }
  }
}
node {
  name: "Dense00/random_uniform/sub"
  op: "Sub"
  input: "Dense00/random_uniform/max"
  input: "Dense00/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense00/random_uniform/mul"
  op: "Mul"
  input: "Dense00/random_uniform/RandomUniform"
  input: "Dense00/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense00/random_uniform"
  op: "Add"
  input: "Dense00/random_uniform/mul"
  input: "Dense00/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense00/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense00/kernel/Assign"
  op: "Assign"
  input: "Dense00/kernel"
  input: "Dense00/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense00/kernel/read"
  op: "Identity"
  input: "Dense00/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/kernel"
      }
    }
  }
}
node {
  name: "Dense00/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense00/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense00/bias/Assign"
  op: "Assign"
  input: "Dense00/bias"
  input: "Dense00/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense00/bias/read"
  op: "Identity"
  input: "Dense00/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/bias"
      }
    }
  }
}
node {
  name: "Dense00/MatMul"
  op: "MatMul"
  input: "flatten_1/Reshape"
  input: "Dense00/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense00/BiasAdd"
  op: "BiasAdd"
  input: "Dense00/MatMul"
  input: "Dense00/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense00/Relu"
  op: "Relu"
  input: "Dense00/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense10/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\016\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "Dense10/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.277350097895
      }
    }
  }
}
node {
  name: "Dense10/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.277350097895
      }
    }
  }
}
node {
  name: "Dense10/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense10/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 9707571
    }
  }
}
node {
  name: "Dense10/random_uniform/sub"
  op: "Sub"
  input: "Dense10/random_uniform/max"
  input: "Dense10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense10/random_uniform/mul"
  op: "Mul"
  input: "Dense10/random_uniform/RandomUniform"
  input: "Dense10/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense10/random_uniform"
  op: "Add"
  input: "Dense10/random_uniform/mul"
  input: "Dense10/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense10/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense10/kernel/Assign"
  op: "Assign"
  input: "Dense10/kernel"
  input: "Dense10/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense10/kernel/read"
  op: "Identity"
  input: "Dense10/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/kernel"
      }
    }
  }
}
node {
  name: "Dense10/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense10/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense10/bias/Assign"
  op: "Assign"
  input: "Dense10/bias"
  input: "Dense10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense10/bias/read"
  op: "Identity"
  input: "Dense10/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/bias"
      }
    }
  }
}
node {
  name: "Dense10/MatMul"
  op: "MatMul"
  input: "input_2"
  input: "Dense10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense10/BiasAdd"
  op: "BiasAdd"
  input: "Dense10/MatMul"
  input: "Dense10/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense10/Relu"
  op: "Relu"
  input: "Dense10/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "concatenate_1/concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concatenate_1/concat"
  op: "ConcatV2"
  input: "Dense00/Relu"
  input: "Dense10/Relu"
  input: "concatenate_1/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Dense20/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Dense20/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.125
      }
    }
  }
}
node {
  name: "Dense20/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.125
      }
    }
  }
}
node {
  name: "Dense20/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense20/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 5968514
    }
  }
}
node {
  name: "Dense20/random_uniform/sub"
  op: "Sub"
  input: "Dense20/random_uniform/max"
  input: "Dense20/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense20/random_uniform/mul"
  op: "Mul"
  input: "Dense20/random_uniform/RandomUniform"
  input: "Dense20/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense20/random_uniform"
  op: "Add"
  input: "Dense20/random_uniform/mul"
  input: "Dense20/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense20/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense20/kernel/Assign"
  op: "Assign"
  input: "Dense20/kernel"
  input: "Dense20/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense20/kernel/read"
  op: "Identity"
  input: "Dense20/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/kernel"
      }
    }
  }
}
node {
  name: "Dense20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense20/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense20/bias/Assign"
  op: "Assign"
  input: "Dense20/bias"
  input: "Dense20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense20/bias/read"
  op: "Identity"
  input: "Dense20/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/bias"
      }
    }
  }
}
node {
  name: "Dense20/MatMul"
  op: "MatMul"
  input: "concatenate_1/concat"
  input: "Dense20/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense20/BiasAdd"
  op: "BiasAdd"
  input: "Dense20/MatMul"
  input: "Dense20/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense20/Relu"
  op: "Relu"
  input: "Dense20/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense21/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Dense21/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353
      }
    }
  }
}
node {
  name: "Dense21/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353
      }
    }
  }
}
node {
  name: "Dense21/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense21/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6132789
    }
  }
}
node {
  name: "Dense21/random_uniform/sub"
  op: "Sub"
  input: "Dense21/random_uniform/max"
  input: "Dense21/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense21/random_uniform/mul"
  op: "Mul"
  input: "Dense21/random_uniform/RandomUniform"
  input: "Dense21/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense21/random_uniform"
  op: "Add"
  input: "Dense21/random_uniform/mul"
  input: "Dense21/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense21/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense21/kernel/Assign"
  op: "Assign"
  input: "Dense21/kernel"
  input: "Dense21/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense21/kernel/read"
  op: "Identity"
  input: "Dense21/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/kernel"
      }
    }
  }
}
node {
  name: "Dense21/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense21/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense21/bias/Assign"
  op: "Assign"
  input: "Dense21/bias"
  input: "Dense21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense21/bias/read"
  op: "Identity"
  input: "Dense21/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/bias"
      }
    }
  }
}
node {
  name: "Dense21/MatMul"
  op: "MatMul"
  input: "Dense20/Relu"
  input: "Dense21/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense21/BiasAdd"
  op: "BiasAdd"
  input: "Dense21/MatMul"
  input: "Dense21/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense21/Relu"
  op: "Relu"
  input: "Dense21/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense22/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "Dense22/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353
      }
    }
  }
}
node {
  name: "Dense22/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353
      }
    }
  }
}
node {
  name: "Dense22/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Dense22/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 6373690
    }
  }
}
node {
  name: "Dense22/random_uniform/sub"
  op: "Sub"
  input: "Dense22/random_uniform/max"
  input: "Dense22/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense22/random_uniform/mul"
  op: "Mul"
  input: "Dense22/random_uniform/RandomUniform"
  input: "Dense22/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense22/random_uniform"
  op: "Add"
  input: "Dense22/random_uniform/mul"
  input: "Dense22/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Dense22/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense22/kernel/Assign"
  op: "Assign"
  input: "Dense22/kernel"
  input: "Dense22/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense22/kernel/read"
  op: "Identity"
  input: "Dense22/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/kernel"
      }
    }
  }
}
node {
  name: "Dense22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Dense22/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Dense22/bias/Assign"
  op: "Assign"
  input: "Dense22/bias"
  input: "Dense22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Dense22/bias/read"
  op: "Identity"
  input: "Dense22/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/bias"
      }
    }
  }
}
node {
  name: "Dense22/MatMul"
  op: "MatMul"
  input: "Dense21/Relu"
  input: "Dense22/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Dense22/BiasAdd"
  op: "BiasAdd"
  input: "Dense22/MatMul"
  input: "Dense22/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Dense22/Relu"
  op: "Relu"
  input: "Dense22/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Final/random_uniform/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "Final/random_uniform/min"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.1513299793
      }
    }
  }
}
node {
  name: "Final/random_uniform/max"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.1513299793
      }
    }
  }
}
node {
  name: "Final/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "Final/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 2144300
    }
  }
}
node {
  name: "Final/random_uniform/sub"
  op: "Sub"
  input: "Final/random_uniform/max"
  input: "Final/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Final/random_uniform/mul"
  op: "Mul"
  input: "Final/random_uniform/RandomUniform"
  input: "Final/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Final/random_uniform"
  op: "Add"
  input: "Final/random_uniform/mul"
  input: "Final/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Final/kernel"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final/kernel/Assign"
  op: "Assign"
  input: "Final/kernel"
  input: "Final/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final/kernel/read"
  op: "Identity"
  input: "Final/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/kernel"
      }
    }
  }
}
node {
  name: "Final/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Final/bias"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Final/bias/Assign"
  op: "Assign"
  input: "Final/bias"
  input: "Final/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Final/bias/read"
  op: "Identity"
  input: "Final/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/bias"
      }
    }
  }
}
node {
  name: "Final/MatMul"
  op: "MatMul"
  input: "Dense22/Relu"
  input: "Final/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "Final/BiasAdd"
  op: "BiasAdd"
  input: "Final/MatMul"
  input: "Final/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "Final/Softmax"
  op: "Softmax"
  input: "Final/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Placeholder"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign"
  op: "Assign"
  input: "Conv1/kernel"
  input: "Placeholder"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_1"
  op: "Assign"
  input: "Conv1/bias"
  input: "Placeholder_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_2"
  op: "Assign"
  input: "Conv2/kernel"
  input: "Placeholder_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_3"
  op: "Assign"
  input: "Conv2/bias"
  input: "Placeholder_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_4"
  op: "Assign"
  input: "Conv3/kernel"
  input: "Placeholder_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_5"
  op: "Assign"
  input: "Conv3/bias"
  input: "Placeholder_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_6"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_6"
  op: "Assign"
  input: "Conv4/kernel"
  input: "Placeholder_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_7"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_7"
  op: "Assign"
  input: "Conv4/bias"
  input: "Placeholder_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_8"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_8"
  op: "Assign"
  input: "Dense00/kernel"
  input: "Placeholder_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_9"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_9"
  op: "Assign"
  input: "Dense00/bias"
  input: "Placeholder_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_10"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_10"
  op: "Assign"
  input: "Dense10/kernel"
  input: "Placeholder_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_11"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_11"
  op: "Assign"
  input: "Dense10/bias"
  input: "Placeholder_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_12"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_12"
  op: "Assign"
  input: "Dense20/kernel"
  input: "Placeholder_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_13"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_13"
  op: "Assign"
  input: "Dense20/bias"
  input: "Placeholder_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_14"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_14"
  op: "Assign"
  input: "Dense21/kernel"
  input: "Placeholder_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_15"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_15"
  op: "Assign"
  input: "Dense21/bias"
  input: "Placeholder_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_16"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_16"
  op: "Assign"
  input: "Dense22/kernel"
  input: "Placeholder_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_17"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_17"
  op: "Assign"
  input: "Dense22/bias"
  input: "Placeholder_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_18"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Assign_18"
  op: "Assign"
  input: "Final/kernel"
  input: "Placeholder_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_19"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Assign_19"
  op: "Assign"
  input: "Final/bias"
  input: "Placeholder_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "Conv1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "Conv1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "Conv2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "Conv2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "Conv3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "Conv3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "Conv4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "Conv4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "Dense00/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "Dense00/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "Dense10/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "Dense10/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "Dense20/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "Dense20/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "Dense21/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "Dense21/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "Dense22/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "Dense22/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "Final/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/kernel"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "Final/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^Conv1/bias/Assign"
  input: "^Conv1/kernel/Assign"
  input: "^Conv2/bias/Assign"
  input: "^Conv2/kernel/Assign"
  input: "^Conv3/bias/Assign"
  input: "^Conv3/kernel/Assign"
  input: "^Conv4/bias/Assign"
  input: "^Conv4/kernel/Assign"
  input: "^Dense00/bias/Assign"
  input: "^Dense00/kernel/Assign"
  input: "^Dense10/bias/Assign"
  input: "^Dense10/kernel/Assign"
  input: "^Dense20/bias/Assign"
  input: "^Dense20/kernel/Assign"
  input: "^Dense21/bias/Assign"
  input: "^Dense21/kernel/Assign"
  input: "^Dense22/bias/Assign"
  input: "^Dense22/kernel/Assign"
  input: "^Final/bias/Assign"
  input: "^Final/kernel/Assign"
}
node {
  name: "Adadelta/lr/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000146484380821
      }
    }
  }
}
node {
  name: "Adadelta/lr"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adadelta/lr/Assign"
  op: "Assign"
  input: "Adadelta/lr"
  input: "Adadelta/lr/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/lr"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adadelta/lr/read"
  op: "Identity"
  input: "Adadelta/lr"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/lr"
      }
    }
  }
}
node {
  name: "Adadelta/decay/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "Adadelta/decay"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adadelta/decay/Assign"
  op: "Assign"
  input: "Adadelta/decay"
  input: "Adadelta/decay/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/decay"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adadelta/decay/read"
  op: "Identity"
  input: "Adadelta/decay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/decay"
      }
    }
  }
}
node {
  name: "Adadelta/iterations/initial_value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "Adadelta/iterations"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "Adadelta/iterations/Assign"
  op: "Assign"
  input: "Adadelta/iterations"
  input: "Adadelta/iterations/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adadelta/iterations/read"
  op: "Identity"
  input: "Adadelta/iterations"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/iterations"
      }
    }
  }
}
node {
  name: "Final_target"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "Final_sample_weights"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "loss/Final_loss/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Final_loss/Sum"
  op: "Sum"
  input: "Final/Softmax"
  input: "loss/Final_loss/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "loss/Final_loss/truediv"
  op: "RealDiv"
  input: "Final/Softmax"
  input: "loss/Final_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.00000001169e-07
      }
    }
  }
}
node {
  name: "loss/Final_loss/sub/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/Final_loss/sub"
  op: "Sub"
  input: "loss/Final_loss/sub/x"
  input: "loss/Final_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/clip_by_value"
  op: "ClipByValue"
  input: "loss/Final_loss/truediv"
  input: "loss/Final_loss/Const"
  input: "loss/Final_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/Log"
  op: "Log"
  input: "loss/Final_loss/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/mul"
  op: "Mul"
  input: "Final_target"
  input: "loss/Final_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "loss/Final_loss/Sum_1"
  op: "Sum"
  input: "loss/Final_loss/mul"
  input: "loss/Final_loss/Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Final_loss/Neg"
  op: "Neg"
  input: "loss/Final_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "loss/Final_loss/Mean"
  op: "Mean"
  input: "loss/Final_loss/Neg"
  input: "loss/Final_loss/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Final_loss/mul_1"
  op: "Mul"
  input: "loss/Final_loss/Mean"
  input: "Final_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/NotEqual/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "loss/Final_loss/NotEqual"
  op: "NotEqual"
  input: "Final_sample_weights"
  input: "loss/Final_loss/NotEqual/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/Cast"
  op: "Cast"
  input: "loss/Final_loss/NotEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "loss/Final_loss/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Final_loss/Mean_1"
  op: "Mean"
  input: "loss/Final_loss/Cast"
  input: "loss/Final_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/Final_loss/truediv_1"
  op: "RealDiv"
  input: "loss/Final_loss/mul_1"
  input: "loss/Final_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "loss/Final_loss/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "loss/Final_loss/Mean_2"
  op: "Mean"
  input: "loss/Final_loss/truediv_1"
  input: "loss/Final_loss/Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "loss/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "loss/mul"
  op: "Mul"
  input: "loss/mul/x"
  input: "loss/Final_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "metrics/categorical_accuracy/ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/categorical_accuracy/ArgMax"
  op: "ArgMax"
  input: "Final_target"
  input: "metrics/categorical_accuracy/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/categorical_accuracy/ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "metrics/categorical_accuracy/ArgMax_1"
  op: "ArgMax"
  input: "Final/Softmax"
  input: "metrics/categorical_accuracy/ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/categorical_accuracy/Equal"
  op: "Equal"
  input: "metrics/categorical_accuracy/ArgMax"
  input: "metrics/categorical_accuracy/ArgMax_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "metrics/categorical_accuracy/Cast"
  op: "Cast"
  input: "metrics/categorical_accuracy/Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "metrics/categorical_accuracy/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "metrics/categorical_accuracy/Mean"
  op: "Mean"
  input: "metrics/categorical_accuracy/Cast"
  input: "metrics/categorical_accuracy/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/Shape"
  input: "training/Adadelta/gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/Fill"
  input: "loss/Final_loss/Mean_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/mul_grad/Mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/Fill"
  input: "loss/mul/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Shape"
  op: "Shape"
  input: "loss/Final_loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Shape_1"
  op: "Shape"
  input: "loss/Final_loss/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Shape_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Shape_2"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Prod_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Prod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/floordiv"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Tile"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Shape"
  op: "Shape"
  input: "loss/Final_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/truediv"
  input: "loss/Final_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Neg"
  op: "Neg"
  input: "loss/Final_loss/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Neg"
  input: "loss/Final_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/RealDiv_1"
  input: "loss/Final_loss/Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_2_grad/truediv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/mul"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Sum_1"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Shape"
  op: "Shape"
  input: "loss/Final_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Shape_1"
  op: "Shape"
  input: "Final_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Reshape"
  input: "Final_sample_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Mul_1"
  op: "Mul"
  input: "loss/Final_loss/Mean"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Mul_1"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Sum_1"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape"
  op: "Shape"
  input: "loss/Final_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/add"
  op: "Add"
  input: "loss/Final_loss/Mean/reduction_indices"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/add"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/range/start"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Size"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/range"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/mod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/DynamicStitch"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_1_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape_2"
  op: "Shape"
  input: "loss/Final_loss/Neg"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape_3"
  op: "Shape"
  input: "loss/Final_loss/Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Prod"
  op: "Prod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape_2"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Const_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Prod_1"
  op: "Prod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Shape_3"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum_1/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum_1"
  op: "Maximum"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Prod_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/floordiv_1"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Prod"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Maximum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Cast"
  op: "Cast"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/floordiv_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/truediv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Tile"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Mean"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Neg_grad/Neg"
  op: "Neg"
  input: "training/Adadelta/gradients/loss/Final_loss/Mean_grad/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Neg"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Shape"
  op: "Shape"
  input: "loss/Final_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/add"
  op: "Add"
  input: "loss/Final_loss/Sum_1/reduction_indices"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/add"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/range/start"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Size"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Shape_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/range"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/mod"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/DynamicStitch"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Neg_grad/Neg"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Shape"
  op: "Shape"
  input: "Final_target"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "loss/Final_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Mul"
  op: "Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Tile"
  input: "loss/Final_loss/Log"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Mul_1"
  op: "Mul"
  input: "Final_target"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_1_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Mul_1"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Sum_1"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/mul"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "loss/Final_loss/clip_by_value"
  input: "^training/Adadelta/gradients/loss/Final_loss/mul_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Log"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Log_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/mul_grad/Reshape_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Log_grad/Reciprocal"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Log"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape"
  op: "Shape"
  input: "loss/Final_loss/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_3"
  op: "Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/zeros"
  op: "Fill"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_3"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Less"
  op: "Less"
  input: "loss/Final_loss/truediv"
  input: "loss/Final_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Greater"
  op: "Greater"
  input: "loss/Final_loss/truediv"
  input: "loss/Final_loss/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/BroadcastGradientArgs_1"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/LogicalOr"
  op: "LogicalOr"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Less"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Greater"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Select"
  op: "Select"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/LogicalOr"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/zeros"
  input: "training/Adadelta/gradients/loss/Final_loss/Log_grad/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Select_1"
  op: "Select"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Less"
  input: "training/Adadelta/gradients/loss/Final_loss/Log_grad/mul"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Select_2"
  op: "Select"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Greater"
  input: "training/Adadelta/gradients/loss/Final_loss/Log_grad/mul"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Select"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/BroadcastGradientArgs_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Select_1"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Sum_1"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Sum_2"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Select_2"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/BroadcastGradientArgs_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Reshape_2"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Sum_2"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Shape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/clip_by_value"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Shape"
  op: "Shape"
  input: "Final/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Shape_1"
  op: "Shape"
  input: "loss/Final_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Reshape"
  input: "loss/Final_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Neg"
  op: "Neg"
  input: "Final/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Neg"
  input: "loss/Final_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/RealDiv_1"
  input: "loss/Final_loss/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/loss/Final_loss/clip_by_value_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Sum_1"
  op: "Sum"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/mul"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Sum_1"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Shape"
  op: "Shape"
  input: "Final/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Size"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/add"
  op: "Add"
  input: "loss/Final_loss/Sum/reduction_indices"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/mod"
  op: "FloorMod"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/add"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Shape_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/range"
  op: "Range"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/range/start"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Size"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Fill/value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Fill"
  op: "Fill"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Shape_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/range"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/mod"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Maximum/y"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Maximum"
  op: "Maximum"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/DynamicStitch"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Shape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Reshape_1"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Tile"
  op: "Tile"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/Sum"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/AddN"
  op: "AddN"
  input: "training/Adadelta/gradients/loss/Final_loss/truediv_grad/Reshape"
  input: "training/Adadelta/gradients/loss/Final_loss/Sum_grad/Tile"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@loss/Final_loss/truediv"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/mul"
  op: "Mul"
  input: "training/Adadelta/gradients/AddN"
  input: "Final/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/Sum"
  op: "Sum"
  input: "training/Adadelta/gradients/Final/Softmax_grad/mul"
  input: "training/Adadelta/gradients/Final/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/Final/Softmax_grad/Sum"
  input: "training/Adadelta/gradients/Final/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/sub"
  op: "Sub"
  input: "training/Adadelta/gradients/AddN"
  input: "training/Adadelta/gradients/Final/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/Softmax_grad/mul_1"
  op: "Mul"
  input: "training/Adadelta/gradients/Final/Softmax_grad/sub"
  input: "Final/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/Softmax"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Final/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/Final/Softmax_grad/mul_1"
  input: "Final/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Final/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Dense22/Relu"
  input: "training/Adadelta/gradients/Final/Softmax_grad/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense22/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/Final/MatMul_grad/MatMul"
  input: "Dense22/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense22/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Dense22/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense22/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/Dense22/Relu_grad/ReluGrad"
  input: "Dense22/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense22/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Dense21/Relu"
  input: "training/Adadelta/gradients/Dense22/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense21/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/Dense22/MatMul_grad/MatMul"
  input: "Dense21/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense21/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Dense21/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense21/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/Dense21/Relu_grad/ReluGrad"
  input: "Dense21/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense21/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Dense20/Relu"
  input: "training/Adadelta/gradients/Dense21/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense20/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/Dense21/MatMul_grad/MatMul"
  input: "Dense20/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense20/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Dense20/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense20/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/Dense20/Relu_grad/ReluGrad"
  input: "Dense20/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense20/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "concatenate_1/concat"
  input: "training/Adadelta/gradients/Dense20/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/mod"
  op: "FloorMod"
  input: "concatenate_1/concat/axis"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/Shape"
  op: "Shape"
  input: "Dense00/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/ShapeN"
  op: "ShapeN"
  input: "Dense00/Relu"
  input: "Dense10/Relu"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/mod"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/ShapeN"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/Slice"
  op: "Slice"
  input: "training/Adadelta/gradients/Dense20/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/ConcatOffset"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/concatenate_1/concat_grad/Slice_1"
  op: "Slice"
  input: "training/Adadelta/gradients/Dense20/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/ConcatOffset:1"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@concatenate_1/concat"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense00/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/Slice"
  input: "Dense00/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense10/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/concatenate_1/concat_grad/Slice_1"
  input: "Dense10/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense00/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Dense00/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense10/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Dense10/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense00/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/Dense00/Relu_grad/ReluGrad"
  input: "Dense00/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense00/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "flatten_1/Reshape"
  input: "training/Adadelta/gradients/Dense00/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense10/MatMul_grad/MatMul"
  op: "MatMul"
  input: "training/Adadelta/gradients/Dense10/Relu_grad/ReluGrad"
  input: "Dense10/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Dense10/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "input_2"
  input: "training/Adadelta/gradients/Dense10/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/MatMul"
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/gradients/flatten_1/Reshape_grad/Shape"
  op: "Shape"
  input: "max_pooling2d_2/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@flatten_1/Reshape"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/flatten_1/Reshape_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/Dense00/MatMul_grad/MatMul"
  input: "training/Adadelta/gradients/flatten_1/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@flatten_1/Reshape"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Conv4/Relu"
  input: "max_pooling2d_2/MaxPool"
  input: "training/Adadelta/gradients/flatten_1/Reshape_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_2/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv4/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/max_pooling2d_2/MaxPool_grad/MaxPoolGrad"
  input: "Conv4/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv4/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Conv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv4/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "zero_padding2d_3/Pad"
  input: "Conv4/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv4/convolution_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/convolution"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv4/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adadelta/gradients/Conv4/convolution_grad/ShapeN"
  input: "Conv4/kernel/read"
  input: "training/Adadelta/gradients/Conv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv4/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "zero_padding2d_3/Pad"
  input: "training/Adadelta/gradients/Conv4/convolution_grad/Const"
  input: "training/Adadelta/gradients/Conv4/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/stack"
  op: "Pack"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Rank"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_3/Pad/paddings"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Slice/begin"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Slice"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Shape"
  op: "Shape"
  input: "Conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adadelta/gradients/Conv4/convolution_grad/Conv2DBackpropInput"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Reshape"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_3/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/zero_padding2d_3/Pad_grad/Slice_1"
  input: "Conv3/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv3/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv3/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "zero_padding2d_2/Pad"
  input: "Conv3/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv3/convolution_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/convolution"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv3/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adadelta/gradients/Conv3/convolution_grad/ShapeN"
  input: "Conv3/kernel/read"
  input: "training/Adadelta/gradients/Conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv3/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "zero_padding2d_2/Pad"
  input: "training/Adadelta/gradients/Conv3/convolution_grad/Const"
  input: "training/Adadelta/gradients/Conv3/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/stack"
  op: "Pack"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Rank"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_2/Pad/paddings"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Slice/begin"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Slice"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Shape"
  op: "Shape"
  input: "max_pooling2d_1/MaxPool"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adadelta/gradients/Conv3/convolution_grad/Conv2DBackpropInput"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Reshape"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_2/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "Conv2/Relu"
  input: "max_pooling2d_1/MaxPool"
  input: "training/Adadelta/gradients/zero_padding2d_2/Pad_grad/Slice_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@max_pooling2d_1/MaxPool"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/max_pooling2d_1/MaxPool_grad/MaxPoolGrad"
  input: "Conv2/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv2/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv2/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "zero_padding2d_1/Pad"
  input: "Conv2/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv2/convolution_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/convolution"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv2/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adadelta/gradients/Conv2/convolution_grad/ShapeN"
  input: "Conv2/kernel/read"
  input: "training/Adadelta/gradients/Conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv2/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "zero_padding2d_1/Pad"
  input: "training/Adadelta/gradients/Conv2/convolution_grad/Const"
  input: "training/Adadelta/gradients/Conv2/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Rank"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/stack/1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/stack"
  op: "Pack"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Rank"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/stack/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Slice/begin"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Slice"
  op: "Slice"
  input: "zero_padding2d_1/Pad/paddings"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Slice/begin"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Reshape"
  op: "Reshape"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Slice"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Shape"
  op: "Shape"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Slice_1"
  op: "Slice"
  input: "training/Adadelta/gradients/Conv2/convolution_grad/Conv2DBackpropInput"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Reshape"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@zero_padding2d_1/Pad"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "training/Adadelta/gradients/zero_padding2d_1/Pad_grad/Slice_1"
  input: "Conv1/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/Relu"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv1/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "training/Adadelta/gradients/Conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/BiasAdd"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv1/convolution_grad/ShapeN"
  op: "ShapeN"
  input: "input_1"
  input: "Conv1/kernel/read"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/convolution"
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv1/convolution_grad/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/convolution"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv1/convolution_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "training/Adadelta/gradients/Conv1/convolution_grad/ShapeN"
  input: "Conv1/kernel/read"
  input: "training/Adadelta/gradients/Conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/gradients/Conv1/convolution_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "input_1"
  input: "training/Adadelta/gradients/Conv1/convolution_grad/Const"
  input: "training/Adadelta/gradients/Conv1/Relu_grad/ReluGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/convolution"
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros"
  op: "Fill"
  input: "training/Adadelta/zeros/shape_as_tensor"
  input: "training/Adadelta/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable"
  input: "training/Adadelta/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable/read"
  op: "Identity"
  input: "training/Adadelta/Variable"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_1"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_1/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_1"
  input: "training/Adadelta/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_1/read"
  op: "Identity"
  input: "training/Adadelta/Variable_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_1"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_2/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_2"
  op: "Fill"
  input: "training/Adadelta/zeros_2/shape_as_tensor"
  input: "training/Adadelta/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_2"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_2/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_2"
  input: "training/Adadelta/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_2/read"
  op: "Identity"
  input: "training/Adadelta/Variable_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_2"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_3"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_3/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_3"
  input: "training/Adadelta/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_3/read"
  op: "Identity"
  input: "training/Adadelta/Variable_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_3"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_4/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_4/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_4"
  op: "Fill"
  input: "training/Adadelta/zeros_4/shape_as_tensor"
  input: "training/Adadelta/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_4"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_4/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_4"
  input: "training/Adadelta/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_4/read"
  op: "Identity"
  input: "training/Adadelta/Variable_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_4"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_5"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_5/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_5"
  input: "training/Adadelta/zeros_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_5/read"
  op: "Identity"
  input: "training/Adadelta/Variable_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_5"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_6/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_6/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_6"
  op: "Fill"
  input: "training/Adadelta/zeros_6/shape_as_tensor"
  input: "training/Adadelta/zeros_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_6"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_6/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_6"
  input: "training/Adadelta/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_6/read"
  op: "Identity"
  input: "training/Adadelta/Variable_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_6"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_7"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_7/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_7"
  input: "training/Adadelta/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_7/read"
  op: "Identity"
  input: "training/Adadelta/Variable_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_7"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_8/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_8/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_8"
  op: "Fill"
  input: "training/Adadelta/zeros_8/shape_as_tensor"
  input: "training/Adadelta/zeros_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_8"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_8/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_8"
  input: "training/Adadelta/zeros_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_8/read"
  op: "Identity"
  input: "training/Adadelta/Variable_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_8"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_9"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_9/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_9"
  input: "training/Adadelta/zeros_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_9/read"
  op: "Identity"
  input: "training/Adadelta/Variable_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_9"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_10"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_10/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_10"
  input: "training/Adadelta/zeros_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_10/read"
  op: "Identity"
  input: "training/Adadelta/Variable_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_10"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_11"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_11/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_11"
  input: "training/Adadelta/zeros_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_11/read"
  op: "Identity"
  input: "training/Adadelta/Variable_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_11"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_12/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_12/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_12"
  op: "Fill"
  input: "training/Adadelta/zeros_12/shape_as_tensor"
  input: "training/Adadelta/zeros_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_12"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_12/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_12"
  input: "training/Adadelta/zeros_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_12/read"
  op: "Identity"
  input: "training/Adadelta/Variable_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_12"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_13"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_13/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_13"
  input: "training/Adadelta/zeros_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_13/read"
  op: "Identity"
  input: "training/Adadelta/Variable_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_13"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_14/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_14/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_14"
  op: "Fill"
  input: "training/Adadelta/zeros_14/shape_as_tensor"
  input: "training/Adadelta/zeros_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_14"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_14/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_14"
  input: "training/Adadelta/zeros_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_14/read"
  op: "Identity"
  input: "training/Adadelta/Variable_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_14"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_15"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_15/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_15"
  input: "training/Adadelta/zeros_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_15/read"
  op: "Identity"
  input: "training/Adadelta/Variable_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_15"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_16/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_16/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_16"
  op: "Fill"
  input: "training/Adadelta/zeros_16/shape_as_tensor"
  input: "training/Adadelta/zeros_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_16"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_16/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_16"
  input: "training/Adadelta/zeros_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_16/read"
  op: "Identity"
  input: "training/Adadelta/Variable_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_16"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_17"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_17/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_17"
  input: "training/Adadelta/zeros_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_17/read"
  op: "Identity"
  input: "training/Adadelta/Variable_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_17"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_18/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_18/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_18"
  op: "Fill"
  input: "training/Adadelta/zeros_18/shape_as_tensor"
  input: "training/Adadelta/zeros_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_18"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_18/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_18"
  input: "training/Adadelta/zeros_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_18/read"
  op: "Identity"
  input: "training/Adadelta/Variable_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_18"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_19"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_19/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_19"
  input: "training/Adadelta/zeros_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_19/read"
  op: "Identity"
  input: "training/Adadelta/Variable_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_19"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_20/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\006\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_20/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_20"
  op: "Fill"
  input: "training/Adadelta/zeros_20/shape_as_tensor"
  input: "training/Adadelta/zeros_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_20"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_20/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_20"
  input: "training/Adadelta/zeros_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_20/read"
  op: "Identity"
  input: "training/Adadelta/Variable_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_20"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_21"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_21/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_21"
  input: "training/Adadelta/zeros_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_21/read"
  op: "Identity"
  input: "training/Adadelta/Variable_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_21"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_22/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000\200\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_22/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_22"
  op: "Fill"
  input: "training/Adadelta/zeros_22/shape_as_tensor"
  input: "training/Adadelta/zeros_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_22"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_22/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_22"
  input: "training/Adadelta/zeros_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_22/read"
  op: "Identity"
  input: "training/Adadelta/Variable_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_22"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_23"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_23/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_23"
  input: "training/Adadelta/zeros_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_23/read"
  op: "Identity"
  input: "training/Adadelta/Variable_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_23"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_24/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_24/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_24"
  op: "Fill"
  input: "training/Adadelta/zeros_24/shape_as_tensor"
  input: "training/Adadelta/zeros_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_24"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_24/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_24"
  input: "training/Adadelta/zeros_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_24/read"
  op: "Identity"
  input: "training/Adadelta/Variable_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_24"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_25"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_25/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_25"
  input: "training/Adadelta/zeros_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_25/read"
  op: "Identity"
  input: "training/Adadelta/Variable_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_25"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_26/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\004\000\000\000\004\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_26/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_26"
  op: "Fill"
  input: "training/Adadelta/zeros_26/shape_as_tensor"
  input: "training/Adadelta/zeros_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_26"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_26/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_26"
  input: "training/Adadelta/zeros_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_26/read"
  op: "Identity"
  input: "training/Adadelta/Variable_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_26"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_27"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_27/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_27"
  input: "training/Adadelta/zeros_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_27/read"
  op: "Identity"
  input: "training/Adadelta/Variable_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_27"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_28/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\020\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_28/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_28"
  op: "Fill"
  input: "training/Adadelta/zeros_28/shape_as_tensor"
  input: "training/Adadelta/zeros_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_28"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_28/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_28"
  input: "training/Adadelta/zeros_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_28/read"
  op: "Identity"
  input: "training/Adadelta/Variable_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_28"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_29"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_29/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_29"
  input: "training/Adadelta/zeros_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_29/read"
  op: "Identity"
  input: "training/Adadelta/Variable_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_29"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 14
          }
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_30"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_30/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_30"
  input: "training/Adadelta/zeros_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_30/read"
  op: "Identity"
  input: "training/Adadelta/Variable_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_30"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_31"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_31/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_31"
  input: "training/Adadelta/zeros_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_31/read"
  op: "Identity"
  input: "training/Adadelta/Variable_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_31"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_32/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_32/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_32"
  op: "Fill"
  input: "training/Adadelta/zeros_32/shape_as_tensor"
  input: "training/Adadelta/zeros_32/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_32"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_32/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_32"
  input: "training/Adadelta/zeros_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_32/read"
  op: "Identity"
  input: "training/Adadelta/Variable_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_32"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_33"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_33/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_33"
  input: "training/Adadelta/zeros_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_33/read"
  op: "Identity"
  input: "training/Adadelta/Variable_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_33"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_34/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_34/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_34"
  op: "Fill"
  input: "training/Adadelta/zeros_34/shape_as_tensor"
  input: "training/Adadelta/zeros_34/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_34"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_34/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_34"
  input: "training/Adadelta/zeros_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_34/read"
  op: "Identity"
  input: "training/Adadelta/Variable_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_34"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_35"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_35/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_35"
  input: "training/Adadelta/zeros_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_35/read"
  op: "Identity"
  input: "training/Adadelta/Variable_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_35"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_36/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_36/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_36"
  op: "Fill"
  input: "training/Adadelta/zeros_36/shape_as_tensor"
  input: "training/Adadelta/zeros_36/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_36"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_36/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_36"
  input: "training/Adadelta/zeros_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_36/read"
  op: "Identity"
  input: "training/Adadelta/Variable_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_36"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_37"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_37/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_37"
  input: "training/Adadelta/zeros_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_37/read"
  op: "Identity"
  input: "training/Adadelta/Variable_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_37"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_38/shape_as_tensor"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\006\000\000\000"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_38/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_38"
  op: "Fill"
  input: "training/Adadelta/zeros_38/shape_as_tensor"
  input: "training/Adadelta/zeros_38/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "training/Adadelta/Variable_38"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_38/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_38"
  input: "training/Adadelta/zeros_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_38/read"
  op: "Identity"
  input: "training/Adadelta/Variable_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_38"
      }
    }
  }
}
node {
  name: "training/Adadelta/zeros_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 6
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Variable_39"
  op: "VariableV2"
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "training/Adadelta/Variable_39/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable_39"
  input: "training/Adadelta/zeros_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/Variable_39/read"
  op: "Identity"
  input: "training/Adadelta/Variable_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_39"
      }
    }
  }
}
node {
  name: "training/Adadelta/AssignAdd/value"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "training/Adadelta/AssignAdd"
  op: "AssignAdd"
  input: "Adadelta/iterations"
  input: "training/Adadelta/AssignAdd/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/iterations"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "training/Adadelta/mul/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul"
  op: "Mul"
  input: "training/Adadelta/mul/x"
  input: "training/Adadelta/Variable/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square"
  op: "Square"
  input: "training/Adadelta/gradients/Conv1/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_1/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_1"
  op: "Mul"
  input: "training/Adadelta/mul_1/x"
  input: "training/Adadelta/Square"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add"
  op: "Add"
  input: "training/Adadelta/mul"
  input: "training/Adadelta/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign"
  op: "Assign"
  input: "training/Adadelta/Variable"
  input: "training/Adadelta/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_1"
  op: "Add"
  input: "training/Adadelta/Variable_20/read"
  input: "training/Adadelta/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value"
  op: "ClipByValue"
  input: "training/Adadelta/add_1"
  input: "training/Adadelta/Const"
  input: "training/Adadelta/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_2"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv1/convolution_grad/Conv2DBackpropFilter"
  input: "training/Adadelta/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_2"
  op: "Add"
  input: "training/Adadelta/add"
  input: "training/Adadelta/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_1"
  op: "ClipByValue"
  input: "training/Adadelta/add_2"
  input: "training/Adadelta/Const_2"
  input: "training/Adadelta/Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_1"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv"
  op: "RealDiv"
  input: "training/Adadelta/mul_2"
  input: "training/Adadelta/Sqrt_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_3"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub"
  op: "Sub"
  input: "Conv1/kernel/read"
  input: "training/Adadelta/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_1"
  op: "Assign"
  input: "Conv1/kernel"
  input: "training/Adadelta/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_4/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_4"
  op: "Mul"
  input: "training/Adadelta/mul_4/x"
  input: "training/Adadelta/Variable_20/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_1"
  op: "Square"
  input: "training/Adadelta/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_5/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_5"
  op: "Mul"
  input: "training/Adadelta/mul_5/x"
  input: "training/Adadelta/Square_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_3"
  op: "Add"
  input: "training/Adadelta/mul_4"
  input: "training/Adadelta/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_2"
  op: "Assign"
  input: "training/Adadelta/Variable_20"
  input: "training/Adadelta/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_6/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_6"
  op: "Mul"
  input: "training/Adadelta/mul_6/x"
  input: "training/Adadelta/Variable_1/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_2"
  op: "Square"
  input: "training/Adadelta/gradients/Conv1/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_7/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_7"
  op: "Mul"
  input: "training/Adadelta/mul_7/x"
  input: "training/Adadelta/Square_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_4"
  op: "Add"
  input: "training/Adadelta/mul_6"
  input: "training/Adadelta/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_3"
  op: "Assign"
  input: "training/Adadelta/Variable_1"
  input: "training/Adadelta/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_5"
  op: "Add"
  input: "training/Adadelta/Variable_21/read"
  input: "training/Adadelta/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_2"
  op: "ClipByValue"
  input: "training/Adadelta/add_5"
  input: "training/Adadelta/Const_4"
  input: "training/Adadelta/Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_2"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_8"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv1/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_6"
  op: "Add"
  input: "training/Adadelta/add_4"
  input: "training/Adadelta/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_6"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_7"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_3"
  op: "ClipByValue"
  input: "training/Adadelta/add_6"
  input: "training/Adadelta/Const_6"
  input: "training/Adadelta/Const_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_3"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_1"
  op: "RealDiv"
  input: "training/Adadelta/mul_8"
  input: "training/Adadelta/Sqrt_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_9"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_1"
  op: "Sub"
  input: "Conv1/bias/read"
  input: "training/Adadelta/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_4"
  op: "Assign"
  input: "Conv1/bias"
  input: "training/Adadelta/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv1/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_10/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_10"
  op: "Mul"
  input: "training/Adadelta/mul_10/x"
  input: "training/Adadelta/Variable_21/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_3"
  op: "Square"
  input: "training/Adadelta/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_11/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_11"
  op: "Mul"
  input: "training/Adadelta/mul_11/x"
  input: "training/Adadelta/Square_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_7"
  op: "Add"
  input: "training/Adadelta/mul_10"
  input: "training/Adadelta/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_5"
  op: "Assign"
  input: "training/Adadelta/Variable_21"
  input: "training/Adadelta/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_12/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_12"
  op: "Mul"
  input: "training/Adadelta/mul_12/x"
  input: "training/Adadelta/Variable_2/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_4"
  op: "Square"
  input: "training/Adadelta/gradients/Conv2/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_13/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_13"
  op: "Mul"
  input: "training/Adadelta/mul_13/x"
  input: "training/Adadelta/Square_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_8"
  op: "Add"
  input: "training/Adadelta/mul_12"
  input: "training/Adadelta/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_6"
  op: "Assign"
  input: "training/Adadelta/Variable_2"
  input: "training/Adadelta/add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_9/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_9"
  op: "Add"
  input: "training/Adadelta/Variable_22/read"
  input: "training/Adadelta/add_9/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_8"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_9"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_4"
  op: "ClipByValue"
  input: "training/Adadelta/add_9"
  input: "training/Adadelta/Const_8"
  input: "training/Adadelta/Const_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_4"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_14"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv2/convolution_grad/Conv2DBackpropFilter"
  input: "training/Adadelta/Sqrt_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_10"
  op: "Add"
  input: "training/Adadelta/add_8"
  input: "training/Adadelta/add_10/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_10"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_11"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_5"
  op: "ClipByValue"
  input: "training/Adadelta/add_10"
  input: "training/Adadelta/Const_10"
  input: "training/Adadelta/Const_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_5"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_2"
  op: "RealDiv"
  input: "training/Adadelta/mul_14"
  input: "training/Adadelta/Sqrt_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_15"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_2"
  op: "Sub"
  input: "Conv2/kernel/read"
  input: "training/Adadelta/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_7"
  op: "Assign"
  input: "Conv2/kernel"
  input: "training/Adadelta/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_16/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_16"
  op: "Mul"
  input: "training/Adadelta/mul_16/x"
  input: "training/Adadelta/Variable_22/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_5"
  op: "Square"
  input: "training/Adadelta/truediv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_17/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_17"
  op: "Mul"
  input: "training/Adadelta/mul_17/x"
  input: "training/Adadelta/Square_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_11"
  op: "Add"
  input: "training/Adadelta/mul_16"
  input: "training/Adadelta/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_8"
  op: "Assign"
  input: "training/Adadelta/Variable_22"
  input: "training/Adadelta/add_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_18/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_18"
  op: "Mul"
  input: "training/Adadelta/mul_18/x"
  input: "training/Adadelta/Variable_3/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_6"
  op: "Square"
  input: "training/Adadelta/gradients/Conv2/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_19/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_19"
  op: "Mul"
  input: "training/Adadelta/mul_19/x"
  input: "training/Adadelta/Square_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_12"
  op: "Add"
  input: "training/Adadelta/mul_18"
  input: "training/Adadelta/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_9"
  op: "Assign"
  input: "training/Adadelta/Variable_3"
  input: "training/Adadelta/add_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_13/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_13"
  op: "Add"
  input: "training/Adadelta/Variable_23/read"
  input: "training/Adadelta/add_13/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_12"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_13"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_6"
  op: "ClipByValue"
  input: "training/Adadelta/add_13"
  input: "training/Adadelta/Const_12"
  input: "training/Adadelta/Const_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_6"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_20"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv2/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_14/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_14"
  op: "Add"
  input: "training/Adadelta/add_12"
  input: "training/Adadelta/add_14/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_14"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_15"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_7"
  op: "ClipByValue"
  input: "training/Adadelta/add_14"
  input: "training/Adadelta/Const_14"
  input: "training/Adadelta/Const_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_7"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_3"
  op: "RealDiv"
  input: "training/Adadelta/mul_20"
  input: "training/Adadelta/Sqrt_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_21"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_3"
  op: "Sub"
  input: "Conv2/bias/read"
  input: "training/Adadelta/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_10"
  op: "Assign"
  input: "Conv2/bias"
  input: "training/Adadelta/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv2/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_22/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_22"
  op: "Mul"
  input: "training/Adadelta/mul_22/x"
  input: "training/Adadelta/Variable_23/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_7"
  op: "Square"
  input: "training/Adadelta/truediv_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_23/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_23"
  op: "Mul"
  input: "training/Adadelta/mul_23/x"
  input: "training/Adadelta/Square_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_15"
  op: "Add"
  input: "training/Adadelta/mul_22"
  input: "training/Adadelta/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_11"
  op: "Assign"
  input: "training/Adadelta/Variable_23"
  input: "training/Adadelta/add_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_24/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_24"
  op: "Mul"
  input: "training/Adadelta/mul_24/x"
  input: "training/Adadelta/Variable_4/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_8"
  op: "Square"
  input: "training/Adadelta/gradients/Conv3/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_25/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_25"
  op: "Mul"
  input: "training/Adadelta/mul_25/x"
  input: "training/Adadelta/Square_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_16"
  op: "Add"
  input: "training/Adadelta/mul_24"
  input: "training/Adadelta/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_12"
  op: "Assign"
  input: "training/Adadelta/Variable_4"
  input: "training/Adadelta/add_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_17/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_17"
  op: "Add"
  input: "training/Adadelta/Variable_24/read"
  input: "training/Adadelta/add_17/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_16"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_17"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_8"
  op: "ClipByValue"
  input: "training/Adadelta/add_17"
  input: "training/Adadelta/Const_16"
  input: "training/Adadelta/Const_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_8"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_26"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv3/convolution_grad/Conv2DBackpropFilter"
  input: "training/Adadelta/Sqrt_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_18/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_18"
  op: "Add"
  input: "training/Adadelta/add_16"
  input: "training/Adadelta/add_18/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_18"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_19"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_9"
  op: "ClipByValue"
  input: "training/Adadelta/add_18"
  input: "training/Adadelta/Const_18"
  input: "training/Adadelta/Const_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_9"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_4"
  op: "RealDiv"
  input: "training/Adadelta/mul_26"
  input: "training/Adadelta/Sqrt_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_27"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_4"
  op: "Sub"
  input: "Conv3/kernel/read"
  input: "training/Adadelta/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_13"
  op: "Assign"
  input: "Conv3/kernel"
  input: "training/Adadelta/sub_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_28/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_28"
  op: "Mul"
  input: "training/Adadelta/mul_28/x"
  input: "training/Adadelta/Variable_24/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_9"
  op: "Square"
  input: "training/Adadelta/truediv_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_29/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_29"
  op: "Mul"
  input: "training/Adadelta/mul_29/x"
  input: "training/Adadelta/Square_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_19"
  op: "Add"
  input: "training/Adadelta/mul_28"
  input: "training/Adadelta/mul_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_14"
  op: "Assign"
  input: "training/Adadelta/Variable_24"
  input: "training/Adadelta/add_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_30/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_30"
  op: "Mul"
  input: "training/Adadelta/mul_30/x"
  input: "training/Adadelta/Variable_5/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_10"
  op: "Square"
  input: "training/Adadelta/gradients/Conv3/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_31/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_31"
  op: "Mul"
  input: "training/Adadelta/mul_31/x"
  input: "training/Adadelta/Square_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_20"
  op: "Add"
  input: "training/Adadelta/mul_30"
  input: "training/Adadelta/mul_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_15"
  op: "Assign"
  input: "training/Adadelta/Variable_5"
  input: "training/Adadelta/add_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_21/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_21"
  op: "Add"
  input: "training/Adadelta/Variable_25/read"
  input: "training/Adadelta/add_21/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_20"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_21"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_10"
  op: "ClipByValue"
  input: "training/Adadelta/add_21"
  input: "training/Adadelta/Const_20"
  input: "training/Adadelta/Const_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_10"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_32"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv3/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_22/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_22"
  op: "Add"
  input: "training/Adadelta/add_20"
  input: "training/Adadelta/add_22/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_22"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_23"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_11"
  op: "ClipByValue"
  input: "training/Adadelta/add_22"
  input: "training/Adadelta/Const_22"
  input: "training/Adadelta/Const_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_11"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_5"
  op: "RealDiv"
  input: "training/Adadelta/mul_32"
  input: "training/Adadelta/Sqrt_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_33"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_5"
  op: "Sub"
  input: "Conv3/bias/read"
  input: "training/Adadelta/mul_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_16"
  op: "Assign"
  input: "Conv3/bias"
  input: "training/Adadelta/sub_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv3/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_34/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_34"
  op: "Mul"
  input: "training/Adadelta/mul_34/x"
  input: "training/Adadelta/Variable_25/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_11"
  op: "Square"
  input: "training/Adadelta/truediv_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_35/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_35"
  op: "Mul"
  input: "training/Adadelta/mul_35/x"
  input: "training/Adadelta/Square_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_23"
  op: "Add"
  input: "training/Adadelta/mul_34"
  input: "training/Adadelta/mul_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_17"
  op: "Assign"
  input: "training/Adadelta/Variable_25"
  input: "training/Adadelta/add_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_36/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_36"
  op: "Mul"
  input: "training/Adadelta/mul_36/x"
  input: "training/Adadelta/Variable_6/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_12"
  op: "Square"
  input: "training/Adadelta/gradients/Conv4/convolution_grad/Conv2DBackpropFilter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_37/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_37"
  op: "Mul"
  input: "training/Adadelta/mul_37/x"
  input: "training/Adadelta/Square_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_24"
  op: "Add"
  input: "training/Adadelta/mul_36"
  input: "training/Adadelta/mul_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_18"
  op: "Assign"
  input: "training/Adadelta/Variable_6"
  input: "training/Adadelta/add_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_25/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_25"
  op: "Add"
  input: "training/Adadelta/Variable_26/read"
  input: "training/Adadelta/add_25/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_24"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_25"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_12"
  op: "ClipByValue"
  input: "training/Adadelta/add_25"
  input: "training/Adadelta/Const_24"
  input: "training/Adadelta/Const_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_12"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_38"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv4/convolution_grad/Conv2DBackpropFilter"
  input: "training/Adadelta/Sqrt_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_26/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_26"
  op: "Add"
  input: "training/Adadelta/add_24"
  input: "training/Adadelta/add_26/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_26"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_27"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_13"
  op: "ClipByValue"
  input: "training/Adadelta/add_26"
  input: "training/Adadelta/Const_26"
  input: "training/Adadelta/Const_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_13"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_6"
  op: "RealDiv"
  input: "training/Adadelta/mul_38"
  input: "training/Adadelta/Sqrt_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_39"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_6"
  op: "Sub"
  input: "Conv4/kernel/read"
  input: "training/Adadelta/mul_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_19"
  op: "Assign"
  input: "Conv4/kernel"
  input: "training/Adadelta/sub_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_40/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_40"
  op: "Mul"
  input: "training/Adadelta/mul_40/x"
  input: "training/Adadelta/Variable_26/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_13"
  op: "Square"
  input: "training/Adadelta/truediv_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_41/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_41"
  op: "Mul"
  input: "training/Adadelta/mul_41/x"
  input: "training/Adadelta/Square_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_27"
  op: "Add"
  input: "training/Adadelta/mul_40"
  input: "training/Adadelta/mul_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_20"
  op: "Assign"
  input: "training/Adadelta/Variable_26"
  input: "training/Adadelta/add_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_42/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_42"
  op: "Mul"
  input: "training/Adadelta/mul_42/x"
  input: "training/Adadelta/Variable_7/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_14"
  op: "Square"
  input: "training/Adadelta/gradients/Conv4/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_43/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_43"
  op: "Mul"
  input: "training/Adadelta/mul_43/x"
  input: "training/Adadelta/Square_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_28"
  op: "Add"
  input: "training/Adadelta/mul_42"
  input: "training/Adadelta/mul_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_21"
  op: "Assign"
  input: "training/Adadelta/Variable_7"
  input: "training/Adadelta/add_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_29/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_29"
  op: "Add"
  input: "training/Adadelta/Variable_27/read"
  input: "training/Adadelta/add_29/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_28"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_29"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_14"
  op: "ClipByValue"
  input: "training/Adadelta/add_29"
  input: "training/Adadelta/Const_28"
  input: "training/Adadelta/Const_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_14"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_44"
  op: "Mul"
  input: "training/Adadelta/gradients/Conv4/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_30/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_30"
  op: "Add"
  input: "training/Adadelta/add_28"
  input: "training/Adadelta/add_30/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_30"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_31"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_15"
  op: "ClipByValue"
  input: "training/Adadelta/add_30"
  input: "training/Adadelta/Const_30"
  input: "training/Adadelta/Const_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_15"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_7"
  op: "RealDiv"
  input: "training/Adadelta/mul_44"
  input: "training/Adadelta/Sqrt_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_45"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_7"
  op: "Sub"
  input: "Conv4/bias/read"
  input: "training/Adadelta/mul_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_22"
  op: "Assign"
  input: "Conv4/bias"
  input: "training/Adadelta/sub_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Conv4/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_46/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_46"
  op: "Mul"
  input: "training/Adadelta/mul_46/x"
  input: "training/Adadelta/Variable_27/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_15"
  op: "Square"
  input: "training/Adadelta/truediv_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_47/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_47"
  op: "Mul"
  input: "training/Adadelta/mul_47/x"
  input: "training/Adadelta/Square_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_31"
  op: "Add"
  input: "training/Adadelta/mul_46"
  input: "training/Adadelta/mul_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_23"
  op: "Assign"
  input: "training/Adadelta/Variable_27"
  input: "training/Adadelta/add_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_48/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_48"
  op: "Mul"
  input: "training/Adadelta/mul_48/x"
  input: "training/Adadelta/Variable_8/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_16"
  op: "Square"
  input: "training/Adadelta/gradients/Dense00/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_49/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_49"
  op: "Mul"
  input: "training/Adadelta/mul_49/x"
  input: "training/Adadelta/Square_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_32"
  op: "Add"
  input: "training/Adadelta/mul_48"
  input: "training/Adadelta/mul_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_24"
  op: "Assign"
  input: "training/Adadelta/Variable_8"
  input: "training/Adadelta/add_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_33/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_33"
  op: "Add"
  input: "training/Adadelta/Variable_28/read"
  input: "training/Adadelta/add_33/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_32"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_33"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_16"
  op: "ClipByValue"
  input: "training/Adadelta/add_33"
  input: "training/Adadelta/Const_32"
  input: "training/Adadelta/Const_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_16"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_50"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense00/MatMul_grad/MatMul_1"
  input: "training/Adadelta/Sqrt_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_34/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_34"
  op: "Add"
  input: "training/Adadelta/add_32"
  input: "training/Adadelta/add_34/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_34"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_35"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_17"
  op: "ClipByValue"
  input: "training/Adadelta/add_34"
  input: "training/Adadelta/Const_34"
  input: "training/Adadelta/Const_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_17"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_8"
  op: "RealDiv"
  input: "training/Adadelta/mul_50"
  input: "training/Adadelta/Sqrt_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_51"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_8"
  op: "Sub"
  input: "Dense00/kernel/read"
  input: "training/Adadelta/mul_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_25"
  op: "Assign"
  input: "Dense00/kernel"
  input: "training/Adadelta/sub_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_52/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_52"
  op: "Mul"
  input: "training/Adadelta/mul_52/x"
  input: "training/Adadelta/Variable_28/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_17"
  op: "Square"
  input: "training/Adadelta/truediv_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_53/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_53"
  op: "Mul"
  input: "training/Adadelta/mul_53/x"
  input: "training/Adadelta/Square_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_35"
  op: "Add"
  input: "training/Adadelta/mul_52"
  input: "training/Adadelta/mul_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_26"
  op: "Assign"
  input: "training/Adadelta/Variable_28"
  input: "training/Adadelta/add_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_54/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_54"
  op: "Mul"
  input: "training/Adadelta/mul_54/x"
  input: "training/Adadelta/Variable_9/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_18"
  op: "Square"
  input: "training/Adadelta/gradients/Dense00/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_55/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_55"
  op: "Mul"
  input: "training/Adadelta/mul_55/x"
  input: "training/Adadelta/Square_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_36"
  op: "Add"
  input: "training/Adadelta/mul_54"
  input: "training/Adadelta/mul_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_27"
  op: "Assign"
  input: "training/Adadelta/Variable_9"
  input: "training/Adadelta/add_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_37/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_37"
  op: "Add"
  input: "training/Adadelta/Variable_29/read"
  input: "training/Adadelta/add_37/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_36"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_37"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_18"
  op: "ClipByValue"
  input: "training/Adadelta/add_37"
  input: "training/Adadelta/Const_36"
  input: "training/Adadelta/Const_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_18"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_56"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense00/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_38/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_38"
  op: "Add"
  input: "training/Adadelta/add_36"
  input: "training/Adadelta/add_38/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_38"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_39"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_19"
  op: "ClipByValue"
  input: "training/Adadelta/add_38"
  input: "training/Adadelta/Const_38"
  input: "training/Adadelta/Const_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_19"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_9"
  op: "RealDiv"
  input: "training/Adadelta/mul_56"
  input: "training/Adadelta/Sqrt_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_57"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_9"
  op: "Sub"
  input: "Dense00/bias/read"
  input: "training/Adadelta/mul_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_28"
  op: "Assign"
  input: "Dense00/bias"
  input: "training/Adadelta/sub_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense00/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_58/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_58"
  op: "Mul"
  input: "training/Adadelta/mul_58/x"
  input: "training/Adadelta/Variable_29/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_19"
  op: "Square"
  input: "training/Adadelta/truediv_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_59/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_59"
  op: "Mul"
  input: "training/Adadelta/mul_59/x"
  input: "training/Adadelta/Square_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_39"
  op: "Add"
  input: "training/Adadelta/mul_58"
  input: "training/Adadelta/mul_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_29"
  op: "Assign"
  input: "training/Adadelta/Variable_29"
  input: "training/Adadelta/add_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_60/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_60"
  op: "Mul"
  input: "training/Adadelta/mul_60/x"
  input: "training/Adadelta/Variable_10/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_20"
  op: "Square"
  input: "training/Adadelta/gradients/Dense10/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_61/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_61"
  op: "Mul"
  input: "training/Adadelta/mul_61/x"
  input: "training/Adadelta/Square_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_40"
  op: "Add"
  input: "training/Adadelta/mul_60"
  input: "training/Adadelta/mul_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_30"
  op: "Assign"
  input: "training/Adadelta/Variable_10"
  input: "training/Adadelta/add_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_41/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_41"
  op: "Add"
  input: "training/Adadelta/Variable_30/read"
  input: "training/Adadelta/add_41/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_40"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_41"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_20"
  op: "ClipByValue"
  input: "training/Adadelta/add_41"
  input: "training/Adadelta/Const_40"
  input: "training/Adadelta/Const_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_20"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_62"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense10/MatMul_grad/MatMul_1"
  input: "training/Adadelta/Sqrt_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_42/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_42"
  op: "Add"
  input: "training/Adadelta/add_40"
  input: "training/Adadelta/add_42/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_42"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_43"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_21"
  op: "ClipByValue"
  input: "training/Adadelta/add_42"
  input: "training/Adadelta/Const_42"
  input: "training/Adadelta/Const_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_21"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_10"
  op: "RealDiv"
  input: "training/Adadelta/mul_62"
  input: "training/Adadelta/Sqrt_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_63"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_10"
  op: "Sub"
  input: "Dense10/kernel/read"
  input: "training/Adadelta/mul_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_31"
  op: "Assign"
  input: "Dense10/kernel"
  input: "training/Adadelta/sub_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_64/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_64"
  op: "Mul"
  input: "training/Adadelta/mul_64/x"
  input: "training/Adadelta/Variable_30/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_21"
  op: "Square"
  input: "training/Adadelta/truediv_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_65/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_65"
  op: "Mul"
  input: "training/Adadelta/mul_65/x"
  input: "training/Adadelta/Square_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_43"
  op: "Add"
  input: "training/Adadelta/mul_64"
  input: "training/Adadelta/mul_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_32"
  op: "Assign"
  input: "training/Adadelta/Variable_30"
  input: "training/Adadelta/add_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_66/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_66"
  op: "Mul"
  input: "training/Adadelta/mul_66/x"
  input: "training/Adadelta/Variable_11/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_22"
  op: "Square"
  input: "training/Adadelta/gradients/Dense10/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_67/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_67"
  op: "Mul"
  input: "training/Adadelta/mul_67/x"
  input: "training/Adadelta/Square_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_44"
  op: "Add"
  input: "training/Adadelta/mul_66"
  input: "training/Adadelta/mul_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_33"
  op: "Assign"
  input: "training/Adadelta/Variable_11"
  input: "training/Adadelta/add_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_45/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_45"
  op: "Add"
  input: "training/Adadelta/Variable_31/read"
  input: "training/Adadelta/add_45/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_44"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_45"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_22"
  op: "ClipByValue"
  input: "training/Adadelta/add_45"
  input: "training/Adadelta/Const_44"
  input: "training/Adadelta/Const_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_22"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_68"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense10/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_46/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_46"
  op: "Add"
  input: "training/Adadelta/add_44"
  input: "training/Adadelta/add_46/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_46"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_47"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_23"
  op: "ClipByValue"
  input: "training/Adadelta/add_46"
  input: "training/Adadelta/Const_46"
  input: "training/Adadelta/Const_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_23"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_11"
  op: "RealDiv"
  input: "training/Adadelta/mul_68"
  input: "training/Adadelta/Sqrt_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_69"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_11"
  op: "Sub"
  input: "Dense10/bias/read"
  input: "training/Adadelta/mul_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_34"
  op: "Assign"
  input: "Dense10/bias"
  input: "training/Adadelta/sub_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense10/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_70/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_70"
  op: "Mul"
  input: "training/Adadelta/mul_70/x"
  input: "training/Adadelta/Variable_31/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_23"
  op: "Square"
  input: "training/Adadelta/truediv_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_71/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_71"
  op: "Mul"
  input: "training/Adadelta/mul_71/x"
  input: "training/Adadelta/Square_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_47"
  op: "Add"
  input: "training/Adadelta/mul_70"
  input: "training/Adadelta/mul_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_35"
  op: "Assign"
  input: "training/Adadelta/Variable_31"
  input: "training/Adadelta/add_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_72/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_72"
  op: "Mul"
  input: "training/Adadelta/mul_72/x"
  input: "training/Adadelta/Variable_12/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_24"
  op: "Square"
  input: "training/Adadelta/gradients/Dense20/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_73/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_73"
  op: "Mul"
  input: "training/Adadelta/mul_73/x"
  input: "training/Adadelta/Square_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_48"
  op: "Add"
  input: "training/Adadelta/mul_72"
  input: "training/Adadelta/mul_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_36"
  op: "Assign"
  input: "training/Adadelta/Variable_12"
  input: "training/Adadelta/add_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_49/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_49"
  op: "Add"
  input: "training/Adadelta/Variable_32/read"
  input: "training/Adadelta/add_49/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_48"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_49"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_24"
  op: "ClipByValue"
  input: "training/Adadelta/add_49"
  input: "training/Adadelta/Const_48"
  input: "training/Adadelta/Const_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_24"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_74"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense20/MatMul_grad/MatMul_1"
  input: "training/Adadelta/Sqrt_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_50/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_50"
  op: "Add"
  input: "training/Adadelta/add_48"
  input: "training/Adadelta/add_50/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_50"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_51"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_25"
  op: "ClipByValue"
  input: "training/Adadelta/add_50"
  input: "training/Adadelta/Const_50"
  input: "training/Adadelta/Const_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_25"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_12"
  op: "RealDiv"
  input: "training/Adadelta/mul_74"
  input: "training/Adadelta/Sqrt_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_75"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_12"
  op: "Sub"
  input: "Dense20/kernel/read"
  input: "training/Adadelta/mul_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_37"
  op: "Assign"
  input: "Dense20/kernel"
  input: "training/Adadelta/sub_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_76/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_76"
  op: "Mul"
  input: "training/Adadelta/mul_76/x"
  input: "training/Adadelta/Variable_32/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_25"
  op: "Square"
  input: "training/Adadelta/truediv_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_77/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_77"
  op: "Mul"
  input: "training/Adadelta/mul_77/x"
  input: "training/Adadelta/Square_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_51"
  op: "Add"
  input: "training/Adadelta/mul_76"
  input: "training/Adadelta/mul_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_38"
  op: "Assign"
  input: "training/Adadelta/Variable_32"
  input: "training/Adadelta/add_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_78/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_78"
  op: "Mul"
  input: "training/Adadelta/mul_78/x"
  input: "training/Adadelta/Variable_13/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_26"
  op: "Square"
  input: "training/Adadelta/gradients/Dense20/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_79/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_79"
  op: "Mul"
  input: "training/Adadelta/mul_79/x"
  input: "training/Adadelta/Square_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_52"
  op: "Add"
  input: "training/Adadelta/mul_78"
  input: "training/Adadelta/mul_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_39"
  op: "Assign"
  input: "training/Adadelta/Variable_13"
  input: "training/Adadelta/add_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_53/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_53"
  op: "Add"
  input: "training/Adadelta/Variable_33/read"
  input: "training/Adadelta/add_53/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_52"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_53"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_26"
  op: "ClipByValue"
  input: "training/Adadelta/add_53"
  input: "training/Adadelta/Const_52"
  input: "training/Adadelta/Const_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_26"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_80"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense20/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_54/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_54"
  op: "Add"
  input: "training/Adadelta/add_52"
  input: "training/Adadelta/add_54/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_54"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_55"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_27"
  op: "ClipByValue"
  input: "training/Adadelta/add_54"
  input: "training/Adadelta/Const_54"
  input: "training/Adadelta/Const_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_27"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_13"
  op: "RealDiv"
  input: "training/Adadelta/mul_80"
  input: "training/Adadelta/Sqrt_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_81"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_13"
  op: "Sub"
  input: "Dense20/bias/read"
  input: "training/Adadelta/mul_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_40"
  op: "Assign"
  input: "Dense20/bias"
  input: "training/Adadelta/sub_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense20/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_82/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_82"
  op: "Mul"
  input: "training/Adadelta/mul_82/x"
  input: "training/Adadelta/Variable_33/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_27"
  op: "Square"
  input: "training/Adadelta/truediv_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_83/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_83"
  op: "Mul"
  input: "training/Adadelta/mul_83/x"
  input: "training/Adadelta/Square_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_55"
  op: "Add"
  input: "training/Adadelta/mul_82"
  input: "training/Adadelta/mul_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_41"
  op: "Assign"
  input: "training/Adadelta/Variable_33"
  input: "training/Adadelta/add_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_84/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_84"
  op: "Mul"
  input: "training/Adadelta/mul_84/x"
  input: "training/Adadelta/Variable_14/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_28"
  op: "Square"
  input: "training/Adadelta/gradients/Dense21/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_85/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_85"
  op: "Mul"
  input: "training/Adadelta/mul_85/x"
  input: "training/Adadelta/Square_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_56"
  op: "Add"
  input: "training/Adadelta/mul_84"
  input: "training/Adadelta/mul_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_42"
  op: "Assign"
  input: "training/Adadelta/Variable_14"
  input: "training/Adadelta/add_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_57/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_57"
  op: "Add"
  input: "training/Adadelta/Variable_34/read"
  input: "training/Adadelta/add_57/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_56"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_57"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_28"
  op: "ClipByValue"
  input: "training/Adadelta/add_57"
  input: "training/Adadelta/Const_56"
  input: "training/Adadelta/Const_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_28"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_86"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense21/MatMul_grad/MatMul_1"
  input: "training/Adadelta/Sqrt_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_58/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_58"
  op: "Add"
  input: "training/Adadelta/add_56"
  input: "training/Adadelta/add_58/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_58"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_59"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_29"
  op: "ClipByValue"
  input: "training/Adadelta/add_58"
  input: "training/Adadelta/Const_58"
  input: "training/Adadelta/Const_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_29"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_14"
  op: "RealDiv"
  input: "training/Adadelta/mul_86"
  input: "training/Adadelta/Sqrt_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_87"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_14"
  op: "Sub"
  input: "Dense21/kernel/read"
  input: "training/Adadelta/mul_87"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_43"
  op: "Assign"
  input: "Dense21/kernel"
  input: "training/Adadelta/sub_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_88/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_88"
  op: "Mul"
  input: "training/Adadelta/mul_88/x"
  input: "training/Adadelta/Variable_34/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_29"
  op: "Square"
  input: "training/Adadelta/truediv_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_89/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_89"
  op: "Mul"
  input: "training/Adadelta/mul_89/x"
  input: "training/Adadelta/Square_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_59"
  op: "Add"
  input: "training/Adadelta/mul_88"
  input: "training/Adadelta/mul_89"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_44"
  op: "Assign"
  input: "training/Adadelta/Variable_34"
  input: "training/Adadelta/add_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_90/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_90"
  op: "Mul"
  input: "training/Adadelta/mul_90/x"
  input: "training/Adadelta/Variable_15/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_30"
  op: "Square"
  input: "training/Adadelta/gradients/Dense21/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_91/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_91"
  op: "Mul"
  input: "training/Adadelta/mul_91/x"
  input: "training/Adadelta/Square_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_60"
  op: "Add"
  input: "training/Adadelta/mul_90"
  input: "training/Adadelta/mul_91"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_45"
  op: "Assign"
  input: "training/Adadelta/Variable_15"
  input: "training/Adadelta/add_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_61/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_61"
  op: "Add"
  input: "training/Adadelta/Variable_35/read"
  input: "training/Adadelta/add_61/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_60"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_61"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_30"
  op: "ClipByValue"
  input: "training/Adadelta/add_61"
  input: "training/Adadelta/Const_60"
  input: "training/Adadelta/Const_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_30"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_92"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense21/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_62/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_62"
  op: "Add"
  input: "training/Adadelta/add_60"
  input: "training/Adadelta/add_62/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_62"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_63"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_31"
  op: "ClipByValue"
  input: "training/Adadelta/add_62"
  input: "training/Adadelta/Const_62"
  input: "training/Adadelta/Const_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_31"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_15"
  op: "RealDiv"
  input: "training/Adadelta/mul_92"
  input: "training/Adadelta/Sqrt_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_93"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_15"
  op: "Sub"
  input: "Dense21/bias/read"
  input: "training/Adadelta/mul_93"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_46"
  op: "Assign"
  input: "Dense21/bias"
  input: "training/Adadelta/sub_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense21/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_94/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_94"
  op: "Mul"
  input: "training/Adadelta/mul_94/x"
  input: "training/Adadelta/Variable_35/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_31"
  op: "Square"
  input: "training/Adadelta/truediv_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_95/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_95"
  op: "Mul"
  input: "training/Adadelta/mul_95/x"
  input: "training/Adadelta/Square_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_63"
  op: "Add"
  input: "training/Adadelta/mul_94"
  input: "training/Adadelta/mul_95"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_47"
  op: "Assign"
  input: "training/Adadelta/Variable_35"
  input: "training/Adadelta/add_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_96/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_96"
  op: "Mul"
  input: "training/Adadelta/mul_96/x"
  input: "training/Adadelta/Variable_16/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_32"
  op: "Square"
  input: "training/Adadelta/gradients/Dense22/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_97/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_97"
  op: "Mul"
  input: "training/Adadelta/mul_97/x"
  input: "training/Adadelta/Square_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_64"
  op: "Add"
  input: "training/Adadelta/mul_96"
  input: "training/Adadelta/mul_97"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_48"
  op: "Assign"
  input: "training/Adadelta/Variable_16"
  input: "training/Adadelta/add_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_65/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_65"
  op: "Add"
  input: "training/Adadelta/Variable_36/read"
  input: "training/Adadelta/add_65/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_64"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_65"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_32"
  op: "ClipByValue"
  input: "training/Adadelta/add_65"
  input: "training/Adadelta/Const_64"
  input: "training/Adadelta/Const_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_32"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_98"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense22/MatMul_grad/MatMul_1"
  input: "training/Adadelta/Sqrt_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_66/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_66"
  op: "Add"
  input: "training/Adadelta/add_64"
  input: "training/Adadelta/add_66/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_66"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_67"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_33"
  op: "ClipByValue"
  input: "training/Adadelta/add_66"
  input: "training/Adadelta/Const_66"
  input: "training/Adadelta/Const_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_33"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_16"
  op: "RealDiv"
  input: "training/Adadelta/mul_98"
  input: "training/Adadelta/Sqrt_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_99"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_16"
  op: "Sub"
  input: "Dense22/kernel/read"
  input: "training/Adadelta/mul_99"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_49"
  op: "Assign"
  input: "Dense22/kernel"
  input: "training/Adadelta/sub_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_100/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_100"
  op: "Mul"
  input: "training/Adadelta/mul_100/x"
  input: "training/Adadelta/Variable_36/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_33"
  op: "Square"
  input: "training/Adadelta/truediv_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_101/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_101"
  op: "Mul"
  input: "training/Adadelta/mul_101/x"
  input: "training/Adadelta/Square_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_67"
  op: "Add"
  input: "training/Adadelta/mul_100"
  input: "training/Adadelta/mul_101"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_50"
  op: "Assign"
  input: "training/Adadelta/Variable_36"
  input: "training/Adadelta/add_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_102/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_102"
  op: "Mul"
  input: "training/Adadelta/mul_102/x"
  input: "training/Adadelta/Variable_17/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_34"
  op: "Square"
  input: "training/Adadelta/gradients/Dense22/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_103/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_103"
  op: "Mul"
  input: "training/Adadelta/mul_103/x"
  input: "training/Adadelta/Square_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_68"
  op: "Add"
  input: "training/Adadelta/mul_102"
  input: "training/Adadelta/mul_103"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_51"
  op: "Assign"
  input: "training/Adadelta/Variable_17"
  input: "training/Adadelta/add_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_69/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_69"
  op: "Add"
  input: "training/Adadelta/Variable_37/read"
  input: "training/Adadelta/add_69/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_68"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_69"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_34"
  op: "ClipByValue"
  input: "training/Adadelta/add_69"
  input: "training/Adadelta/Const_68"
  input: "training/Adadelta/Const_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_34"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_104"
  op: "Mul"
  input: "training/Adadelta/gradients/Dense22/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_70/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_70"
  op: "Add"
  input: "training/Adadelta/add_68"
  input: "training/Adadelta/add_70/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_70"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_71"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_35"
  op: "ClipByValue"
  input: "training/Adadelta/add_70"
  input: "training/Adadelta/Const_70"
  input: "training/Adadelta/Const_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_35"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_17"
  op: "RealDiv"
  input: "training/Adadelta/mul_104"
  input: "training/Adadelta/Sqrt_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_105"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_17"
  op: "Sub"
  input: "Dense22/bias/read"
  input: "training/Adadelta/mul_105"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_52"
  op: "Assign"
  input: "Dense22/bias"
  input: "training/Adadelta/sub_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Dense22/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_106/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_106"
  op: "Mul"
  input: "training/Adadelta/mul_106/x"
  input: "training/Adadelta/Variable_37/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_35"
  op: "Square"
  input: "training/Adadelta/truediv_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_107/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_107"
  op: "Mul"
  input: "training/Adadelta/mul_107/x"
  input: "training/Adadelta/Square_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_71"
  op: "Add"
  input: "training/Adadelta/mul_106"
  input: "training/Adadelta/mul_107"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_53"
  op: "Assign"
  input: "training/Adadelta/Variable_37"
  input: "training/Adadelta/add_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_108/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_108"
  op: "Mul"
  input: "training/Adadelta/mul_108/x"
  input: "training/Adadelta/Variable_18/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_36"
  op: "Square"
  input: "training/Adadelta/gradients/Final/MatMul_grad/MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_109/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_109"
  op: "Mul"
  input: "training/Adadelta/mul_109/x"
  input: "training/Adadelta/Square_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_72"
  op: "Add"
  input: "training/Adadelta/mul_108"
  input: "training/Adadelta/mul_109"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_54"
  op: "Assign"
  input: "training/Adadelta/Variable_18"
  input: "training/Adadelta/add_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_73/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_73"
  op: "Add"
  input: "training/Adadelta/Variable_38/read"
  input: "training/Adadelta/add_73/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_72"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_73"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_36"
  op: "ClipByValue"
  input: "training/Adadelta/add_73"
  input: "training/Adadelta/Const_72"
  input: "training/Adadelta/Const_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_36"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_110"
  op: "Mul"
  input: "training/Adadelta/gradients/Final/MatMul_grad/MatMul_1"
  input: "training/Adadelta/Sqrt_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_74/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_74"
  op: "Add"
  input: "training/Adadelta/add_72"
  input: "training/Adadelta/add_74/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_74"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_75"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_37"
  op: "ClipByValue"
  input: "training/Adadelta/add_74"
  input: "training/Adadelta/Const_74"
  input: "training/Adadelta/Const_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_37"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_18"
  op: "RealDiv"
  input: "training/Adadelta/mul_110"
  input: "training/Adadelta/Sqrt_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_111"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_18"
  op: "Sub"
  input: "Final/kernel/read"
  input: "training/Adadelta/mul_111"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_55"
  op: "Assign"
  input: "Final/kernel"
  input: "training/Adadelta/sub_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/kernel"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_112/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_112"
  op: "Mul"
  input: "training/Adadelta/mul_112/x"
  input: "training/Adadelta/Variable_38/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_37"
  op: "Square"
  input: "training/Adadelta/truediv_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_113/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_113"
  op: "Mul"
  input: "training/Adadelta/mul_113/x"
  input: "training/Adadelta/Square_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_75"
  op: "Add"
  input: "training/Adadelta/mul_112"
  input: "training/Adadelta/mul_113"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_56"
  op: "Assign"
  input: "training/Adadelta/Variable_38"
  input: "training/Adadelta/add_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_114/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_114"
  op: "Mul"
  input: "training/Adadelta/mul_114/x"
  input: "training/Adadelta/Variable_19/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_38"
  op: "Square"
  input: "training/Adadelta/gradients/Final/BiasAdd_grad/BiasAddGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_115/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_115"
  op: "Mul"
  input: "training/Adadelta/mul_115/x"
  input: "training/Adadelta/Square_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_76"
  op: "Add"
  input: "training/Adadelta/mul_114"
  input: "training/Adadelta/mul_115"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_57"
  op: "Assign"
  input: "training/Adadelta/Variable_19"
  input: "training/Adadelta/add_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/add_77/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_77"
  op: "Add"
  input: "training/Adadelta/Variable_39/read"
  input: "training/Adadelta/add_77/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_76"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_77"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_38"
  op: "ClipByValue"
  input: "training/Adadelta/add_77"
  input: "training/Adadelta/Const_76"
  input: "training/Adadelta/Const_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_38"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_116"
  op: "Mul"
  input: "training/Adadelta/gradients/Final/BiasAdd_grad/BiasAddGrad"
  input: "training/Adadelta/Sqrt_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_78/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993923e-09
      }
    }
  }
}
node {
  name: "training/Adadelta/add_78"
  op: "Add"
  input: "training/Adadelta/add_76"
  input: "training/Adadelta/add_78/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Const_78"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "training/Adadelta/Const_79"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: inf
      }
    }
  }
}
node {
  name: "training/Adadelta/clip_by_value_39"
  op: "ClipByValue"
  input: "training/Adadelta/add_78"
  input: "training/Adadelta/Const_78"
  input: "training/Adadelta/Const_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Sqrt_39"
  op: "Sqrt"
  input: "training/Adadelta/clip_by_value_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/truediv_19"
  op: "RealDiv"
  input: "training/Adadelta/mul_116"
  input: "training/Adadelta/Sqrt_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_117"
  op: "Mul"
  input: "Adadelta/lr/read"
  input: "training/Adadelta/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/sub_19"
  op: "Sub"
  input: "Final/bias/read"
  input: "training/Adadelta/mul_117"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_58"
  op: "Assign"
  input: "Final/bias"
  input: "training/Adadelta/sub_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Final/bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/Adadelta/mul_118/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_118"
  op: "Mul"
  input: "training/Adadelta/mul_118/x"
  input: "training/Adadelta/Variable_39/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Square_39"
  op: "Square"
  input: "training/Adadelta/truediv_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/mul_119/x"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0500000007451
      }
    }
  }
}
node {
  name: "training/Adadelta/mul_119"
  op: "Mul"
  input: "training/Adadelta/mul_119/x"
  input: "training/Adadelta/Square_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/add_79"
  op: "Add"
  input: "training/Adadelta/mul_118"
  input: "training/Adadelta/mul_119"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "training/Adadelta/Assign_59"
  op: "Assign"
  input: "training/Adadelta/Variable_39"
  input: "training/Adadelta/add_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "training/group_deps"
  op: "NoOp"
  input: "^loss/mul"
  input: "^metrics/categorical_accuracy/Mean"
  input: "^training/Adadelta/Assign"
  input: "^training/Adadelta/AssignAdd"
  input: "^training/Adadelta/Assign_1"
  input: "^training/Adadelta/Assign_10"
  input: "^training/Adadelta/Assign_11"
  input: "^training/Adadelta/Assign_12"
  input: "^training/Adadelta/Assign_13"
  input: "^training/Adadelta/Assign_14"
  input: "^training/Adadelta/Assign_15"
  input: "^training/Adadelta/Assign_16"
  input: "^training/Adadelta/Assign_17"
  input: "^training/Adadelta/Assign_18"
  input: "^training/Adadelta/Assign_19"
  input: "^training/Adadelta/Assign_2"
  input: "^training/Adadelta/Assign_20"
  input: "^training/Adadelta/Assign_21"
  input: "^training/Adadelta/Assign_22"
  input: "^training/Adadelta/Assign_23"
  input: "^training/Adadelta/Assign_24"
  input: "^training/Adadelta/Assign_25"
  input: "^training/Adadelta/Assign_26"
  input: "^training/Adadelta/Assign_27"
  input: "^training/Adadelta/Assign_28"
  input: "^training/Adadelta/Assign_29"
  input: "^training/Adadelta/Assign_3"
  input: "^training/Adadelta/Assign_30"
  input: "^training/Adadelta/Assign_31"
  input: "^training/Adadelta/Assign_32"
  input: "^training/Adadelta/Assign_33"
  input: "^training/Adadelta/Assign_34"
  input: "^training/Adadelta/Assign_35"
  input: "^training/Adadelta/Assign_36"
  input: "^training/Adadelta/Assign_37"
  input: "^training/Adadelta/Assign_38"
  input: "^training/Adadelta/Assign_39"
  input: "^training/Adadelta/Assign_4"
  input: "^training/Adadelta/Assign_40"
  input: "^training/Adadelta/Assign_41"
  input: "^training/Adadelta/Assign_42"
  input: "^training/Adadelta/Assign_43"
  input: "^training/Adadelta/Assign_44"
  input: "^training/Adadelta/Assign_45"
  input: "^training/Adadelta/Assign_46"
  input: "^training/Adadelta/Assign_47"
  input: "^training/Adadelta/Assign_48"
  input: "^training/Adadelta/Assign_49"
  input: "^training/Adadelta/Assign_5"
  input: "^training/Adadelta/Assign_50"
  input: "^training/Adadelta/Assign_51"
  input: "^training/Adadelta/Assign_52"
  input: "^training/Adadelta/Assign_53"
  input: "^training/Adadelta/Assign_54"
  input: "^training/Adadelta/Assign_55"
  input: "^training/Adadelta/Assign_56"
  input: "^training/Adadelta/Assign_57"
  input: "^training/Adadelta/Assign_58"
  input: "^training/Adadelta/Assign_59"
  input: "^training/Adadelta/Assign_6"
  input: "^training/Adadelta/Assign_7"
  input: "^training/Adadelta/Assign_8"
  input: "^training/Adadelta/Assign_9"
}
node {
  name: "IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "Adadelta/lr"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/lr"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "Adadelta/decay"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/decay"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "Adadelta/iterations"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@Adadelta/iterations"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_1"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_2"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_3"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_4"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_5"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_6"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_6"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_7"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_7"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_8"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_8"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_9"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_9"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_10"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_10"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_11"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_11"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_12"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_12"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_13"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_13"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_14"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_14"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_15"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_15"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_16"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_16"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_17"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_17"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_18"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_18"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_19"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_19"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_20"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_20"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_21"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_21"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_22"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_22"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_23"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_23"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_24"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_24"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_25"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_25"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_26"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_26"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_27"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_27"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_28"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_28"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_29"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_29"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_30"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_30"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_31"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_31"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_32"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_32"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_33"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_33"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_34"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_34"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_35"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_35"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_36"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_36"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_37"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_37"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_38"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_38"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "training/Adadelta/Variable_39"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_39"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^Adadelta/decay/Assign"
  input: "^Adadelta/iterations/Assign"
  input: "^Adadelta/lr/Assign"
  input: "^training/Adadelta/Variable/Assign"
  input: "^training/Adadelta/Variable_1/Assign"
  input: "^training/Adadelta/Variable_10/Assign"
  input: "^training/Adadelta/Variable_11/Assign"
  input: "^training/Adadelta/Variable_12/Assign"
  input: "^training/Adadelta/Variable_13/Assign"
  input: "^training/Adadelta/Variable_14/Assign"
  input: "^training/Adadelta/Variable_15/Assign"
  input: "^training/Adadelta/Variable_16/Assign"
  input: "^training/Adadelta/Variable_17/Assign"
  input: "^training/Adadelta/Variable_18/Assign"
  input: "^training/Adadelta/Variable_19/Assign"
  input: "^training/Adadelta/Variable_2/Assign"
  input: "^training/Adadelta/Variable_20/Assign"
  input: "^training/Adadelta/Variable_21/Assign"
  input: "^training/Adadelta/Variable_22/Assign"
  input: "^training/Adadelta/Variable_23/Assign"
  input: "^training/Adadelta/Variable_24/Assign"
  input: "^training/Adadelta/Variable_25/Assign"
  input: "^training/Adadelta/Variable_26/Assign"
  input: "^training/Adadelta/Variable_27/Assign"
  input: "^training/Adadelta/Variable_28/Assign"
  input: "^training/Adadelta/Variable_29/Assign"
  input: "^training/Adadelta/Variable_3/Assign"
  input: "^training/Adadelta/Variable_30/Assign"
  input: "^training/Adadelta/Variable_31/Assign"
  input: "^training/Adadelta/Variable_32/Assign"
  input: "^training/Adadelta/Variable_33/Assign"
  input: "^training/Adadelta/Variable_34/Assign"
  input: "^training/Adadelta/Variable_35/Assign"
  input: "^training/Adadelta/Variable_36/Assign"
  input: "^training/Adadelta/Variable_37/Assign"
  input: "^training/Adadelta/Variable_38/Assign"
  input: "^training/Adadelta/Variable_39/Assign"
  input: "^training/Adadelta/Variable_4/Assign"
  input: "^training/Adadelta/Variable_5/Assign"
  input: "^training/Adadelta/Variable_6/Assign"
  input: "^training/Adadelta/Variable_7/Assign"
  input: "^training/Adadelta/Variable_8/Assign"
  input: "^training/Adadelta/Variable_9/Assign"
}
node {
  name: "Placeholder_20"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_20"
  op: "Assign"
  input: "training/Adadelta/Variable"
  input: "Placeholder_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_21"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_21"
  op: "Assign"
  input: "training/Adadelta/Variable_1"
  input: "Placeholder_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_1"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_22"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_22"
  op: "Assign"
  input: "training/Adadelta/Variable_2"
  input: "Placeholder_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_2"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_23"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_23"
  op: "Assign"
  input: "training/Adadelta/Variable_3"
  input: "Placeholder_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_3"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_24"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_24"
  op: "Assign"
  input: "training/Adadelta/Variable_4"
  input: "Placeholder_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_4"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_25"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_25"
  op: "Assign"
  input: "training/Adadelta/Variable_5"
  input: "Placeholder_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_5"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_26"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_26"
  op: "Assign"
  input: "training/Adadelta/Variable_6"
  input: "Placeholder_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_6"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_27"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_27"
  op: "Assign"
  input: "training/Adadelta/Variable_7"
  input: "Placeholder_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_7"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_28"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_28"
  op: "Assign"
  input: "training/Adadelta/Variable_8"
  input: "Placeholder_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_8"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_29"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_29"
  op: "Assign"
  input: "training/Adadelta/Variable_9"
  input: "Placeholder_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_9"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_30"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_30"
  op: "Assign"
  input: "training/Adadelta/Variable_10"
  input: "Placeholder_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_10"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_31"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_31"
  op: "Assign"
  input: "training/Adadelta/Variable_11"
  input: "Placeholder_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_11"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_32"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_32"
  op: "Assign"
  input: "training/Adadelta/Variable_12"
  input: "Placeholder_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_12"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_33"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_33"
  op: "Assign"
  input: "training/Adadelta/Variable_13"
  input: "Placeholder_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_13"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_34"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_34"
  op: "Assign"
  input: "training/Adadelta/Variable_14"
  input: "Placeholder_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_14"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_35"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_35"
  op: "Assign"
  input: "training/Adadelta/Variable_15"
  input: "Placeholder_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_15"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_36"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_36"
  op: "Assign"
  input: "training/Adadelta/Variable_16"
  input: "Placeholder_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_16"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_37"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_37"
  op: "Assign"
  input: "training/Adadelta/Variable_17"
  input: "Placeholder_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_17"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_38"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Assign_38"
  op: "Assign"
  input: "training/Adadelta/Variable_18"
  input: "Placeholder_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_18"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_39"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Assign_39"
  op: "Assign"
  input: "training/Adadelta/Variable_19"
  input: "Placeholder_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_19"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_40"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 6
        }
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_40"
  op: "Assign"
  input: "training/Adadelta/Variable_20"
  input: "Placeholder_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_20"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_41"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
      }
    }
  }
}
node {
  name: "Assign_41"
  op: "Assign"
  input: "training/Adadelta/Variable_21"
  input: "Placeholder_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_21"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_42"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 128
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_42"
  op: "Assign"
  input: "training/Adadelta/Variable_22"
  input: "Placeholder_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_22"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_43"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_43"
  op: "Assign"
  input: "training/Adadelta/Variable_23"
  input: "Placeholder_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_23"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_44"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_44"
  op: "Assign"
  input: "training/Adadelta/Variable_24"
  input: "Placeholder_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_24"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_45"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_45"
  op: "Assign"
  input: "training/Adadelta/Variable_25"
  input: "Placeholder_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_25"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_46"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4
        }
        dim {
          size: 4
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_46"
  op: "Assign"
  input: "training/Adadelta/Variable_26"
  input: "Placeholder_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_26"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_47"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_47"
  op: "Assign"
  input: "training/Adadelta/Variable_27"
  input: "Placeholder_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_27"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_48"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 4096
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_48"
  op: "Assign"
  input: "training/Adadelta/Variable_28"
  input: "Placeholder_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_28"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_49"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_49"
  op: "Assign"
  input: "training/Adadelta/Variable_29"
  input: "Placeholder_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_29"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_50"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 14
        }
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_50"
  op: "Assign"
  input: "training/Adadelta/Variable_30"
  input: "Placeholder_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_30"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_51"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
}
node {
  name: "Assign_51"
  op: "Assign"
  input: "training/Adadelta/Variable_31"
  input: "Placeholder_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_31"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_52"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_52"
  op: "Assign"
  input: "training/Adadelta/Variable_32"
  input: "Placeholder_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_32"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_53"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_53"
  op: "Assign"
  input: "training/Adadelta/Variable_33"
  input: "Placeholder_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_33"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_54"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_54"
  op: "Assign"
  input: "training/Adadelta/Variable_34"
  input: "Placeholder_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_34"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_55"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_55"
  op: "Assign"
  input: "training/Adadelta/Variable_35"
  input: "Placeholder_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_35"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_56"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_56"
  op: "Assign"
  input: "training/Adadelta/Variable_36"
  input: "Placeholder_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_36"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_57"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "Assign_57"
  op: "Assign"
  input: "training/Adadelta/Variable_37"
  input: "Placeholder_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_37"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_58"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Assign_58"
  op: "Assign"
  input: "training/Adadelta/Variable_38"
  input: "Placeholder_58"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_38"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Placeholder_59"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 6
        }
      }
    }
  }
}
node {
  name: "Assign_59"
  op: "Assign"
  input: "training/Adadelta/Variable_39"
  input: "Placeholder_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@training/Adadelta/Variable_39"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "strided_slice/stack"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "strided_slice/stack_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice/stack_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "strided_slice"
  op: "StridedSlice"
  input: "Final/Softmax"
  input: "strided_slice/stack"
  input: "strided_slice/stack_1"
  input: "strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "k2tfout_0"
  op: "Identity"
  input: "strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
versions {
  producer: 26
}
